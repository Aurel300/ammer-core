name: Build Windows

on:
  push:
    branches:
      - master
  pull_request:

jobs:
#  test-cpp:
#    runs-on: windows-latest
#    steps:
#    - name: Install Haxe (4.2.5)
#      uses: krdlab/setup-haxe@v1
#      with:
#        haxe-version: 4.2.5
#
#    - name: Checkout ammer-core
#      uses: actions/checkout@v2
#      with:
#        path: "ammer-core"
#
#    - name: Set up haxelibs
#      shell: bash
#      run: |
#        haxelib dev ammer-core ammer-core
#        haxelib git hxcpp https://github.com/HaxeFoundation/hxcpp.git
#        cd `haxelib path hxcpp | head -n 1`
#        cd tools/hxcpp
#        haxe compile.hxml
#
#    - name: Compile tests
#      shell: bash
#      run: |
#        cd ammer-core/test
#        haxe build-cpp-static.hxml
#
#    - name: Run tests
#      shell: bash
#      run: |
#        cd ammer-core/test
#        ./test-cpp-static-windows.sh

#  test-hashlink:
#    runs-on: windows-latest
#    steps:
#    - name: Install Haxe (4.2.5)
#      uses: krdlab/setup-haxe@v1
#      with:
#        haxe-version: 4.2.5
#
#    - name: Checkout ammer-core
#      uses: actions/checkout@v2
#      with:
#        path: "ammer-core"
#
#    - name: Set up haxelibs
#      shell: bash
#      run: |
#        haxelib git hashlink https://github.com/HaxeFoundation/hashlink.git master other/haxelib/
#        haxelib dev ammer-core ammer-core
#
#    - name: Install HashLink (1.12)
#      shell: bash
#      run: |
#        curl -L https://github.com/HaxeFoundation/hashlink/releases/download/1.12/hl-1.12.0-win.zip -o hashlink.zip
#        unzip hashlink.zip
#        cd hl-1.12.0-win
#        echo "HASHLINK_PATH=`pwd`" >> $GITHUB_ENV
#        echo "HASHLINK_PATH_WIN=$(cygpath -w `pwd`)" >> $GITHUB_ENV
#        pwd >> $GITHUB_PATH
#
#    - name: Set up MSVC
#      uses: ilammy/msvc-dev-cmd@v1
#
#    - name: Compile tests
#      shell: bash
#      run: |
#        # https://github.com/ilammy/msvc-dev-cmd#name-conflicts-with-shell-bash
#        rm /usr/bin/link
#        cd ammer-core/test
#        mkdir -p bin/hlc
#        cp "$HASHLINK_PATH/libhl.lib" bin/hlc
#        haxe -D ammercoretest.hl.includepaths="$HASHLINK_PATH/include" -D ammercoretest.hl.librarypaths="$HASHLINK_PATH" build-hl.hxml
#        haxe -D ammercoretest.hl.includepaths="$HASHLINK_PATH/include" -D ammercoretest.hl.librarypaths="$HASHLINK_PATH" build-hlc.hxml
#
#    #- name: Compile tests (MSVC)
#    #  run: |
#    #    cd ammer-core/test/bin/hlc
#    #    cl.exe /DLIBHL_EXPORTS /Femain.exe /I"$env:HASHLINK_PATH_WIN\include" /I. libhl.lib lib.hl.lib main.c /link /VERBOSE /SUBSYSTEM:CONSOLE /LIBPATH:"." /LIBPATH:"ammer_build\example"
#
#    - name: Run tests
#      shell: bash
#      run: |
#        cd ammer-core/test
#        exit 1
#      #  ./test-hl-windows.sh
#      #./test-hlc-windows.sh

#  test-java:
#    runs-on: windows-latest
#    steps:
#    - name: Install Haxe (4.2.5)
#      uses: krdlab/setup-haxe@v1
#      with:
#        haxe-version: 4.2.5
#
#    - name: Checkout ammer-core
#      uses: actions/checkout@v2
#      with:
#        path: "ammer-core"
#
#    - name: Set up haxelibs
#      shell: bash
#      run: |
#        haxelib --quiet install hxjava
#        haxelib dev ammer-core ammer-core
#
#    - name: Set up MSVC
#      uses: ilammy/msvc-dev-cmd@v1
#
#    - name: Compile tests
#      shell: bash
#      run: |
#        # https://github.com/ilammy/msvc-dev-cmd#name-conflicts-with-shell-bash
#        rm /usr/bin/link
#        cd ammer-core/test
#        haxe -D ammercoretest.java.includepaths="$JAVA_HOME\include;$JAVA_HOME\include\win32" build-java.hxml
#        haxe -D ammercoretest.java.includepaths="$JAVA_HOME\include;$JAVA_HOME\include\win32" build-jvm.hxml
#
#    - name: Run tests
#      shell: bash
#      run: |
#        cd ammer-core/test
#        ./test-java.sh
#        ./test-jvm.sh

#  test-nodejs:
#    runs-on: windows-latest
#    steps:
#    - name: Install Haxe (4.2.5)
#      uses: krdlab/setup-haxe@v1
#      with:
#        haxe-version: 4.2.5
#
#    - name: Checkout ammer-core
#      uses: actions/checkout@v2
#      with:
#        path: "ammer-core"
#
#    - name: Set up haxelibs
#      shell: bash
#      run: |
#        haxelib --quiet install hxnodejs
#        haxelib dev ammer-core ammer-core
#
#    - name: Install node-gyp
#      shell: bash
#      run: |
#        npm install -g node-gyp
#
#    - name: Compile tests
#      shell: bash
#      run: |
#        cd ammer-core/test
#        haxe build-nodejs.hxml
#
#    - name: Run tests
#      shell: bash
#      run: |
#        cd ammer-core/test
#        ./test-nodejs.sh

  test-lua:
    runs-on: windows-latest
    steps:
    - name: Install Haxe (4.2.5)
      uses: krdlab/setup-haxe@v1
      with:
        haxe-version: 4.2.5

    - name: Checkout ammer-core
      uses: actions/checkout@v2
      with:
        path: "ammer-core"

    - name: Set up haxelibs
      shell: bash
      run: |
        haxelib dev ammer-core ammer-core

    - name: Set up MSVC
      uses: ilammy/msvc-dev-cmd@v1

    - name: Install Lua
      # commit with Windows fix
      uses: leafo/gh-actions-lua@d72f3188c2aa48cb3815b68b9c4c81307cb45ee2
      with:
        luaVersion: 5.3

    - name: Install Luarocks
      # unmerged PR with Windows fix
      uses: hishamhm/gh-actions-luarocks@5013277f6f115c27478f18c1f647f8de98390628

    - name: Install Lua dependencies
      run: |
        luarocks install bit32 5.3.5.1-1
#  luarocks install lrexlib-pcre 2.9.1-1
#  luarocks install luv 1.41.1-0
#  luarocks install luasocket 3.0rc1-2
#  luarocks install luautf8 0.1.3-1
#  luarocks install hx-lua-simdjson 0.0.1-1

    - name: Compile tests
      shell: bash
      run: |
        cd ammer-core/test
        haxe -D ammercoretest.lua.includepaths=`luarocks config --lua-incdir` -D ammercoretest.lua.librarypaths=`luarocks config --lua-libdir` build-lua.hxml

    - name: Run tests
      run: |
        cd ammer-core/test
        lua bin/lua/test.lua

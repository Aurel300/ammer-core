# generated with ./rebuild-gh-actions.sh, do not edit directly
name: Test python

on:
  push:
    branches: [master, dev]
    tags:
      - "v*.*.*"

jobs:
  build:
    env:
      CI_HAXE_VERSION: '4.2.5'
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
    - name: Adjust path (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        if [[ -z "$GITHUB_PATH" ]]; then
            echo "${HOME}/.local/bin" >> $GITHUB_PATH
        fi

    - name: Update apt and install necessary packages (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        if ! command -v sudo &> /dev/null; then
            apt install sudo
        fi
        sudo apt update
        sudo apt-get install -y software-properties-common

    - name: Set up MSVC (Windows)
      if: matrix.os == 'windows-latest'
      uses: ilammy/msvc-dev-cmd@v1

    - name: Fix "link" (Windows)
      if: matrix.os == 'windows-latest'
      shell: bash
      run: |
        # "link" interferes with the MSVC linker
        rm /usr/bin/link

    - name: Install Haxe
      uses: krdlab/setup-haxe@v1
      with:
        haxe-version: ${{env.CI_HAXE_VERSION}}

    # TODO: configurable Python version
    # TODO: make use of python3-config --cflags, python3-config --ldflags, python3-config --libs
    - name: Set up Python paths (macOS)
      if: matrix.os == 'macos-latest'
      shell: bash
      run: |
        echo CI_PYTHON_VERSION=11 >> $GITHUB_ENV
        echo CI_PYTHON_INCLUDEPATHS="/Library/Frameworks/Python.framework/Versions/3.11/include/python3.11;/Library/Frameworks/Python.framework/Versions/3.11/include/python3.11" >> $GITHUB_ENV
        echo CI_PYTHON_LIBRARYPATHS="/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/config-3.11-darwin" >> $GITHUB_ENV

    - name: Set up Python paths (Linux)
      if: matrix.os == 'ubuntu-latest'
      shell: bash
      run: |
        echo CI_PYTHON_VERSION=10 >> $GITHUB_ENV
        echo CI_PYTHON_INCLUDEPATHS="/usr/include/python3.10" >> $GITHUB_ENV
        echo CI_PYTHON_LIBRARYPATHS="/usr/lib/python3.10/config-3.10-x86_64-linux-gnu" >> $GITHUB_ENV

    - name: Set up Python paths (Windows)
      if: matrix.os == 'windows-latest'
      shell: bash
      run: |
        echo CI_PYTHON_VERSION=9 >> $GITHUB_ENV
        echo CI_PYTHON_INCLUDEPATHS="C:\hostedtoolcache\windows\Python\3.9.13\x64\include" >> $GITHUB_ENV
        echo CI_PYTHON_LIBRARYPATHS="C:\hostedtoolcache\windows\Python\3.9.13\x64\libs" >> $GITHUB_ENV

    - name: Checkout ammer-core
      uses: actions/checkout@v2
      with:
        path: "ammer-core"

    - name: Compile tests (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        haxelib dev ammer-core ammer-core
        python3-config --cflags
        python3-config --ldflags
        python3-config --libs
        cd ammer-core/test
        haxe -D ammercoretest.python.includepaths="/usr/include/python3.10" -D ammercoretest.python.librarypaths="/usr/lib/python3.10/config-3.10-x86_64-linux-gnu" -D ammercoretest.python.version=10 build/build-python.hxml

    - name: Compile tests (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        haxelib dev ammer-core ammer-core
        python3-config --cflags
        python3-config --ldflags
        python3-config --libs
        cd ammer-core/test
        haxe -D ammercoretest.python.includepaths="/Library/Frameworks/Python.framework/Versions/3.11/include/python3.11;/Library/Frameworks/Python.framework/Versions/3.11/include/python3.11" -D ammercoretest.python.librarypaths=/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/config-3.11-darwin -D ammercoretest.python.version=11 build/build-python.hxml

    - name: Compile tests (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        haxelib dev ammer-core ammer-core
        cd ammer-core/test
        haxe -D ammercoretest.python.includepaths=C:\hostedtoolcache\windows\Python\3.9.13\x64\include -D ammercoretest.python.librarypaths=C:\hostedtoolcache\windows\Python\3.9.13\x64\libs -D ammercoretest.python.version=9 build/build-python.hxml

    - name: Run tests (non-Windows)
      if: matrix.os != 'windows-latest'
      run: |
        cd ammer-core/test
        test/test-python.sh

    - name: Run tests (Windows)
      if: matrix.os == 'windows-latest'
      shell: bash
      run: |
        cd ammer-core/test
        test/test-python-windows.sh
